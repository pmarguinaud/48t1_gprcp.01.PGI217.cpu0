#!/bin/bash
#
export GMK_THREADS=1
#
type gmkpack >/dev/null 2>&1
if [ $? -ne 0 ] ; then
  echo "error : gmkpack could not be found."
  exit 1
else
  export GMKROOT=$(dirname $(dirname $(which gmkpack | awk '{print $NF}')))
fi
. $GMKROOT/aux/wrkpack.sh
#
# ------ Main settings --------------------------------------
#
# Fortran compiler options :
declare -A optfrt
# optfrt[4] = Optimal, as for operations : -O0 -g
# optfrt[3] = Debugging                  : -g -O0
# optfrt[2] = Debugging + Bound checking : -g -O0 -Mbounds
# optfrt[1] = Preinitialisations to NaN  : 
# optfrt[0] = User-defined options
optfrt[0]="-O0 -g -acc=gpu -gpu=lineinfo -Mcuda"
#
# Choose subscript (0/1/2/3) :
# --------------------------
Ofrt=0
#
# C compiler options :
optvcc="-O0 -g"
#
# CUDA compiler options
optccu=""
#
# Files in pack to ignore (obsolete/useless) :
# ------------------------------------------  
cat > $GMKWRKDIR/.ignored_files <<end_of_ignored_files
end_of_ignored_files
#
# Do you want to compile dependencies ? (yes/no)
# -----------------------------------
export DEP=yes
# If you compile dependencies, approve the following projects list :
export MKPROJECT="aeolus aladin algor arpifs biper blacklist cmake coupling crm ecfftw etrans ifsaux ifsobs mpa mse obstat odb radiation satrad scat surf surfex trans utilities validation"
#
# Supplementary projects with autogenerated explicit interface blocks :
# -------------------------------------------------------------------  
export INTFB_PROJLIST=""
#
# Do you want to enable the recursive update control ? (yes/no) ?
# --------------------------------------------------
export ICS_RECURSIVE_UPDATE=yes
#
# Do you want to postpone the aborts on compilation errors to the end of the compilation step ? (yes/no) ?
# -------------------------------------------------------------------------------------------
export ICS_POSTPONE_ABORT=no
#
# Three compilation modes are possible : 
# full = full compilation (default value)
# incr = incremental compilation (from a starting to an ending level)
# off  = No compilation at all
# Choose compilation mode (full/incr/off) : 
# ---------------------------------------
export ICS_ICFMODE=full
# If you use the incremental compilation facility, select the top and bottom levels :
export ICS_START=
export ICS_STOP=
# Reduced starting list :
cat > $GMKWRKDIR/.reduced_starting_list <<end_of_reduced_starting_list
end_of_reduced_starting_list
#
# Do you want to output the compilation listings ? (yes/no)
# ----------------------------------------------
export ICS_LIST=yes
#
# Compilation timing report:
# ------------------------- 
# ICS_TIMING_REPORT = 0 (No report) = N (N most time consuming files)
export ICS_TIMING_REPORT=0
#
# Norms checker 2011 severity :
# ---------------------------  
# ICS_NC_SEVERITY = 0 (No report) or 1 (Severe,Warning) or 2 (+Informative)
# ICS_NC_SUPPRESS = "section.item:section.item" : suppressed messages
export ICS_NC_SEVERITY=2
export ICS_NC_SUPPRESS=""
export WHITELIST=
export GEN_WHITELIST=0
#
# Do you want to output the load map(s) ? (yes/no)
# -------------------------------------
export ICS_MAP=no
#
# Five libraries update are possible : 
# full  = full update (default value)
# user  = update user libraries only, not the dummy ones
# dummy = update dummy (user-mirror) libraries only, not the user ones
# unsx  = update unsatisfied external libraries only, not the user/dummy ones
# off   = no update at all
# Choose the libraries update mode (full/user/dummy/unsx/off) : 
# --------------------------------
export ICS_UPDLIBS=full
#
#
# ODB Maximum number of updates supported at compile time
odb_nmxupd=3
#
#
# Do you want to make any executable ? (yes/no)
# ----------------------------------
Load=yes
#
# If you want to make any executable, approve the following ones :
# (libraries should be properly ordered from top to bottom for each binary)
#
# Binary "masterodb" :
cat > $GMKWRKDIR/.masterodb_link <<end_of_masterodb_link
EXEC=MASTERODB
ENTRY=arp*/*/master.o
end_of_masterodb_link
# BACKGROUND LIBRARIES (from top to bottom) :
cat > $GMKWRKDIR/.masterodb_libs <<end_of_masterodb_libs
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libaladin.inter.1.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libaladin.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libarpifs.inter.1.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libarpifs.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libradiation.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libcrm.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libbiper.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libcoupling.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libetrans.inter.1.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libetrans.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libtrans.inter.1.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libtrans.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libalgor.inter.1.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libalgor.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libifsaux.inter.1.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libifsaux.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libmse.inter.1.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libmse.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libsurfex.inter.1.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libsurfex.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libmpa.inter.1.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libmpa.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libodb.inter.1.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libodb.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libcma-odb.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libcountryrst-odb.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libmtocomp-odb.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/librstbias-odb.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libsonderst-odb.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libsatrad.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libsurf.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libblacklist.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libaeolus.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libifsobs.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libecfftw.main.a
/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0/lib/libunsxref-verbose.main.a
end_of_masterodb_libs
# SYSTEM LIBRARIES :
cat > $GMKWRKDIR/.masterodb_sys <<end_of_masterodb_sys
-L/home/gmap/mrpm/marguina/install/PGI217/x2.9/lib -lbufr -lgribex
-L/home/gmap/mrpm/marguina/install/PGI217/netcdf-4.7.2/lib -lnetcdff -lnetcdf
-L/home/gmap/mrpm/marguina/install/PGI217/eccodes-2.14.0/lib -leccodes_f90 -leccodes
-L/home/gmap/mrpm/marguina/install/PGI217/hdf5-1.10.5/lib -lhdf5hl_fortran -lhdf5_fortran -lhdf5
-L/home/gmap/mrpm/marguina/install/PGI217/x2.9/lib -lfdbdummy -lwamdummy -lnaglitedummy -loasisdummy
-L/home/gmap/mrpm/marguina/install/PGI217/lapack-3.2.1/lib -llapack -lblas
-L/home/gmap/mrpm/marguina/install/PGI217/x2.9/lib -libmdummy
-Wl,-rpath,/home/gmap/mrpm/marguina/install/PGI217/hdf5-1.10.5/lib
end_of_masterodb_sys
# LOADER AND OPTIONS :
cat > $GMKWRKDIR/.masterodb_load <<end_of_masterodb_load
/home/gmap/mrpm/marguina/install/gmkpack_support/wrapper/PGI217/mpif90 -acc=gpu -gpu=lineinfo -Mcuda -traceback -Mbyteswapio -Wl,-rpath,/home/gmap/mrpm/marguina/install/PGI217/eccodes-2.14.0/lib -Wl,-rpath,/home/gmap/mrpm/marguina/install/PGI217/lapack-3.2.1/lib -Wl,-rpath,/opt/nvidia/hpc_sdk/Linux_x86_64/20.9/comm_libs/nvshmem/lib -Wl,-rpath,/opt/nvidia/hpc_sdk/Linux_x86_64/20.9/comm_libs/nccl/lib -Wl,-rpath,/opt/nvidia/hpc_sdk/Linux_x86_64/20.9/comm_libs/mpi/lib -Wl,-rpath,/opt/nvidia/hpc_sdk/Linux_x86_64/20.9/math_libs/lib64 -Wl,-rpath,/opt/nvidia/hpc_sdk/Linux_x86_64/20.9/compilers/lib -Wl,-rpath,/opt/nvidia/hpc_sdk/Linux_x86_64/20.9/cuda/lib64 -Wl,-rpath,/home/gmap/mrpm/marguina/install/PGI217/hdf5-1.10.5/lib -Wl,-rpath,/home/gmap/mrpm/marguina/install/PGI217/netcdf-4.7.2/lib
end_of_masterodb_load
#
# Libraries in hub : do you want to re-configure even if the build directory exists ? (ON/OFF) : 
# ---------------------------------------------------------------------------------
export GMK_RECONFIGURE=OFF
#
# Libraries in hub : do you want to compile packages ? (ON/OFF) : 
# --------------------------------------------------
export GMK_MAKE=ON
#
# Libraries in hub : do you want to test libraries ? (ON/OFF) : 
# -----------------------------------------------------------
export GMK_TEST=OFF
# Confirm which libraires to test :
#
# Libraries in hub : do you want to install packages ? (ON/OFF) : 
# --------------------------------------------------
export GMK_INSTALL=ON
#
#
# Blacklist file generator
# ------------------------

export ICS_BL_GENERATOR=


# Verboose level (0 or 1 or 2 or 3) :
# --------------

export ICS_ECHO=1

export GMKVIEW="main inter.1 local"
export TARGET_PACK=/home/gmap/mrpm/marguina/pack/48t1_gprcp.01.PGI217.cpu0
# ----------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------
#
#
# ------ Environment variables -----------------------------------------------------
#
$GMKROOT/aux/envvarpack.sh > $GMKWRKDIR/environment_variables
if [ $? -eq 0 ] ; then
  chmod 755 $GMKWRKDIR/environment_variables
  . $GMKWRKDIR/environment_variables
  \rm $GMKWRKDIR/environment_variables 
else
  echo "Error in envvarpack.sh :"
  cat $GMKWRKDIR/gmkpack_env_variables
  \rm -rf $GMKWRKDIR
  exit 1
fi
#
#
# IF YOU WISH TO CHANGE OR ADD ANY VARIABLE FROM THE CONFIGURATION FILE
# YOU SHOULD DO IT RIGHT BELOW THIS LINE !
#
#
#
$GMKROOT/aux/privarpack.sh > $GMKWRKDIR/environment_variables
chmod 755 $GMKWRKDIR/environment_variables
. $GMKWRKDIR/environment_variables
\rm $GMKWRKDIR/environment_variables
optfrt[4]="$OPT_FRTFLAGS" 
optfrt[3]="$DBG_FRTFLAGS"
optfrt[2]="$DBG_FRTFLAGS $BCD_FRTFLAGS"
optfrt[1]="$OPT_FRTFLAGS $NAN_FRTFLAGS"
export MyF90Flags="${optfrt[$Ofrt]}"
export MyF77Flags="${optfrt[$Ofrt]}"
export MyVccFlags="$optvcc"
export MyCcuFlags="$optccu"
#
export ODB_NMXUPD=$odb_nmxupd
#
echo
echo "This is $(basename $(grep ^THIS_GMKPACK $GMKROOT/util/gmkpack | awk -F"/" '{print $(NF-2)}')) running on a script made by gmkpack.6.9.1"

echo
$GMKROOT/aux/catenvpack.sh
#
# Compilation :
# -----------
$GMKROOT/aux/mkcplpack.sh
if [ $? -ne 0 ] ; then
  echo
  echo Finished on $(date)
  exit 1
fi
#
# Libraries :
# ---------
$GMKROOT/aux/libspack.sh
if [ $? -ne 0 ] ; then
  echo
  echo Finished on $(date)
  exit 1
fi
#
# Binaries :
# --------
if [ "$Load" = "yes" ] ; then
  $GMKROOT/aux/lnkpack.sh
  exit_code=$?
else
  exit_code=0
fi
echo
\rm -rf $GMKWRKDIR
echo Finished on $(date)
exit $exit_code
